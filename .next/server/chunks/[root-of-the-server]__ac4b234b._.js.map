{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/Desktop/NuevoProyecto/src/lib/database.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\r\n\r\nconst poolConfig = {\r\n  host: '127.0.0.1',\r\n  port: 3306,\r\n  user: 'root',\r\n  password: 'admin',\r\n  database: 'inami',\r\n  connectionLimit: 10,\r\n  waitForConnections: true,\r\n  queueLimit: 0,\r\n  // Propiedades v√°lidas para timeout:\r\n  connectTimeout: 60000, // tiempo para establecer conexi√≥n\r\n  timeout: 60000, // tiempo de inactividad antes de timeout\r\n};\r\n\r\nconst pool = mysql.createPool(poolConfig);\r\n\r\nexport async function connectDB() {\r\n  return await pool.getConnection();\r\n}\r\n\r\nexport async function testConnection() {\r\n  let conn;\r\n  try {\r\n    conn = await pool.getConnection();\r\n    const [rows] = await conn.execute('SELECT 1 as test');\r\n    console.log('‚úÖ Conexi√≥n a la BD exitosa');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('‚ùå Error conectando a la BD:', error);\r\n    return false;\r\n  } finally {\r\n    if (conn) conn.release();\r\n  }\r\n}\r\n\r\nexport { pool };"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,aAAa;IACjB,MAAM;IACN,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,oBAAoB;IACpB,YAAY;IACZ,oCAAoC;IACpC,gBAAgB;IAChB,SAAS;AACX;AAEA,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;AAEvB,eAAe;IACpB,OAAO,MAAM,KAAK,aAAa;AACjC;AAEO,eAAe;IACpB,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,KAAK,aAAa;QAC/B,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,OAAO,CAAC;QAClC,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT,SAAU;QACR,IAAI,MAAM,KAAK,OAAO;IACxB;AACF","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dell/Desktop/NuevoProyecto/src/app/api/seguridad/fichas/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { connectDB } from '@/lib/database';\r\n\r\n// GET - Obtener todas las fichas\r\nexport async function GET(request: NextRequest) {\r\n  let conn;\r\n  try {\r\n    console.log('üì• GET /api/seguridad/fichas recibida');\r\n    \r\n    conn = await connectDB();\r\n    const query = 'SELECT * FROM fichas_seguridad ORDER BY id DESC';\r\n    \r\n    const [fichas] = await conn.execute(query) as any[];\r\n    \r\n    console.log(`‚úÖ ${fichas.length} fichas encontradas`);\r\n    return NextResponse.json(fichas);\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error obteniendo fichas:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor al obtener fichas' },\r\n      { status: 500 }\r\n    );\r\n  } finally {\r\n    if (conn) conn.release();\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  let conn;\r\n  try {\r\n    console.log('üì• POST /api/seguridad/fichas recibida');\r\n    \r\n    const fichaData = await request.json();\r\n    console.log('üìù Datos recibidos:', fichaData);\r\n    \r\n    // Validar datos requeridos - USANDO LOS CAMPOS CORRECTOS\r\n    if (!fichaData.expediente_administrativo || !fichaData.nombre_adolescente) {\r\n      return NextResponse.json(\r\n        { error: 'Expediente administrativo y nombre del adolescente son campos requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    conn = await connectDB();\r\n    \r\n    // Insertar nueva ficha - USANDO LOS CAMPOS CORRECTOS\r\n    const query = `\r\n      INSERT INTO fichas_seguridad \r\n      (\r\n        codigo_expediente, estado, nombre_adolescente, expediente_administrativo,\r\n        edad, fecha_nacimiento, originario, residente, fecha_ingreso,\r\n        hora_ingreso, numero_dni, alias, simpatizante, estado_civil,\r\n        grado_escolaridad, nombre_responsable, telefono_responsable,\r\n        juzgado_remitente, juez_remite, expediente_judicial, numero_oficio_ingreso,\r\n        infraccion_penal, es_reincidente, estado_centro_anterior, proceso_judicial_anterior,\r\n        forma_ingreso, golpes, heridas, cicatrices, enfermedad, impedimentos_fisicos,\r\n        ansiedad, personal_medico_atendio, fecha_aprehension, quien_aprehendio,\r\n        golpeado_aprehension, golpeado_traslado, quien_traslado, observaciones,\r\n        nombre_supervisor_seguridad, fecha_entrevista, foto_persona\r\n      ) \r\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n    `;\r\n    \r\n    const values = [\r\n      // Datos Personales\r\n      fichaData.codigo_expediente || null,\r\n      fichaData.estado || 'activo',\r\n      fichaData.nombre_adolescente,\r\n      fichaData.expediente_administrativo,\r\n      fichaData.edad || null,\r\n      fichaData.fecha_nacimiento || null,\r\n      fichaData.originario || null,\r\n      fichaData.residente || null,\r\n      fichaData.fecha_ingreso || null,\r\n      fichaData.hora_ingreso || null,\r\n      fichaData.numero_dni || null,\r\n      fichaData.alias || null,\r\n      fichaData.simpatizante || null,\r\n      fichaData.estado_civil || null,\r\n      fichaData.grado_escolaridad || null,\r\n      fichaData.nombre_responsable || null,\r\n      fichaData.telefono_responsable || null,\r\n      // Datos Judiciales\r\n      fichaData.juzgado_remitente || null,\r\n      fichaData.juez_remite || null,\r\n      fichaData.expediente_judicial || null,\r\n      fichaData.numero_oficio_ingreso || null,\r\n      fichaData.infraccion_penal || null,\r\n      fichaData.es_reincidente ? 1 : 0,\r\n      fichaData.estado_centro_anterior ? 1 : 0,\r\n      fichaData.proceso_judicial_anterior ? 1 : 0,\r\n      fichaData.forma_ingreso || null,\r\n      // Estado F√≠sico\r\n      fichaData.golpes || null,\r\n      fichaData.heridas || null,\r\n      fichaData.cicatrices || null,\r\n      fichaData.enfermedad || null,\r\n      fichaData.impedimentos_fisicos || null,\r\n      fichaData.ansiedad || null,\r\n      fichaData.personal_medico_atendio || null,\r\n      // Aprehensi√≥n y Traslado\r\n      fichaData.fecha_aprehension || null,\r\n      fichaData.quien_aprehendio || null,\r\n      fichaData.golpeado_aprehension ? 1 : 0,\r\n      fichaData.golpeado_traslado ? 1 : 0,\r\n      fichaData.quien_traslado || null,\r\n      fichaData.observaciones || null,\r\n      fichaData.nombre_supervisor_seguridad || null,\r\n      fichaData.fecha_entrevista || null,\r\n      fichaData.foto_persona || null\r\n    ];\r\n    \r\n    const [result] = await conn.execute(query, values) as any;\r\n    const nuevaFichaId = result.insertId;\r\n    \r\n    // Obtener la ficha reci√©n creada\r\n    const [fichas] = await conn.execute(\r\n      'SELECT * FROM fichas_seguridad WHERE id = ?', \r\n      [nuevaFichaId]\r\n    ) as any[];\r\n    \r\n    console.log(`‚úÖ Nueva ficha creada con ID: ${nuevaFichaId}`);\r\n    \r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Ficha creada correctamente',\r\n        ficha: fichas[0]\r\n      },\r\n      { status: 201 }\r\n    );\r\n    \r\n  } catch (error: any) {\r\n    console.error('‚ùå Error creando ficha:', error);\r\n    \r\n    // Manejar errores espec√≠ficos\r\n    if (error.message.includes('Duplicate entry')) {\r\n      return NextResponse.json(\r\n        { error: 'Ya existe una ficha con ese expediente' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor al crear ficha: ' + error.message },\r\n      { status: 500 }\r\n    );\r\n  } finally {\r\n    if (conn) conn.release();\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}